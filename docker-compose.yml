version: "3.7"

services:
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: BdPrueba
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d BdPrueba"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-net
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - microservices-net
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092
    networks:
      - microservices-net
  kafka-topics-init:
    image: confluentinc/cp-kafka:5.5.3
    depends_on:
      - kafka
    entrypoint: >
      bash -c "
      kafka-topics --create --topic topic-crea-transaction --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 &&
      kafka-topics --create --topic topic-valida-transaction --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1
      "
    networks:
      - microservices-net
  ms-gestiona-transaction:
    image: ms-gestiona-transaction:latest
    container_name: ms_gesttransaction_container
    build:
      context: ./ms-gestiona-transaction
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/BdPrueba
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - KAFKA_BOOTSTRAPSERVERS=kafka:29092
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - microservices-net
  ms-antifraude:
    image: ms-antifraude:latest
    container_name: ms_antifraude_container
    build:
      context: ./ms-antifraude
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/BdPrueba
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - KAFKA_BOOTSTRAPSERVERS=kafka:29092
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - microservices-net

volumes:
  postgres_data:

networks:
  microservices-net:
    driver: bridge

